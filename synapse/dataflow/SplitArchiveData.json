{
    "name": "SplitArchiveData",
    "properties": {
        "type": "MappingDataFlow",
        "typeProperties": {
            "sources": [
                {
                    "linkedService": {
                        "referenceName": "AzureDataLakeStorage",
                        "type": "LinkedServiceReference"
                    },
                    "name": "Source"
                }
            ],
            "sinks": [
                {
                    "linkedService": {
                        "referenceName": "AzureDataLakeStorage",
                        "type": "LinkedServiceReference"
                    },
                    "name": "ArchiveSink",
                    "rejectedDataLinkedService": {
                        "referenceName": "AzureDataLakeStorage",
                        "type": "LinkedServiceReference"
                    }
                },
                {
                    "linkedService": {
                        "referenceName": "AzureDataLakeStorage",
                        "type": "LinkedServiceReference"
                    },
                    "name": "CurrentDataSink"
                }
            ],
            "transformations": [
                {
                    "name": "Split"
                }
            ],
            "scriptLines": [
                "parameters{",
                "     containerName as string ('amfosdata'),",
                "     entityName as string ('CustLedgerEntry-21'),",
                "     DateSplitColumn as string ('PostingDate-4'),",
                "     ArchiveDate as string (concat(toString(year(currentUTC()), '-01-01'))\r",
                "\r",
                ")",
                "}",
                "source(allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     ignoreNoFilesFound: false,",
                "     purgeFiles: true,",
                "     format: 'parquet',",
                "     fileSystem: ($containerName),",
                "     folderPath: (concat('data/',$entityName,'/split')),",
                "     manifestType: 'manifest') ~> Source",
                "Source split(toDate(byName($DateSplitColumn)) < toDate($ArchiveDate),",
                "     disjoint: false) ~> Split@(ArchiveData, CurrentData)",
                "Split@ArchiveData sink(allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     format: 'parquet',",
                "     fileSystem: ($containerName),",
                "     folderPath: (concat('data/',$entityName,'/archive')),",
                "     umask: 0022,",
                "     preCommands: [],",
                "     postCommands: [],",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true) ~> ArchiveSink",
                "Split@CurrentData sink(allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     format: 'parquet',",
                "     fileSystem: ($containerName),",
                "     folderPath: (concat('data/',$entityName,'/data')),",
                "     umask: 0022,",
                "     preCommands: [],",
                "     postCommands: [],",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true) ~> CurrentDataSink"
            ]
        }
    }
}